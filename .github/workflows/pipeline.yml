# The name of the workflow.
name: MERN CI/CD

# Define when the workflow should run (on push to main branch).
on:
  pull_request:
    branches:
      - main

# Define environment variables for the workflow.
env:
  # MongoDB URI
  mongo_uri: ${{ secrets.MONGO_URI }}
  # Frontend URL
  frontend_url: ${{ secrets.FRONTEND_URL }}
  # JWT secret
  jwt_secret: ${{ secrets.JWT_SECRET }}
  # Cloudinary credentials
  cloudinary_name: ${{ secrets.CLOUDINARY_NAME }}
  cloudinary_api_key: ${{ secrets.CLOUDINARY_API_KEY }}
  cloudinary_api_secret: ${{ secrets.CLOUDINARY_API_SECRET }}
  # Codecov token
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

# Define jobs for the workflow.
jobs:
  # Build job
  build:
    # Strategy for matrix builds with different Node.js versions
    strategy:
      matrix:
        node_version: [21, 20]
        
    # Set the operating system for the job.
    runs-on: ubuntu-latest
    
    # Define steps to be executed as part of the job.
    steps:
      # Upgrade the Ubuntu image (optional).
      - name: Upgrade Ubuntu Image
        run: sudo apt update && sudo apt upgrade -y

      # Checkout the code from the GitHub repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # Install Node.js and npm.
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      # Install dependencies and build the client application.
      - name: Install Dependencies and Build Client
        working-directory: ./client
        run: |
          npm install
          npm run build

      # Install dependencies and build the server application.
      - name: Install Dependencies and Build Server
        working-directory: ./api
        run: |
          npm install

  # Deploy job
  deploy:
    # Define dependencies on the build job
    needs: [build]
    
    # Set the operating system for the job.
    runs-on: ubuntu-latest
      
    # Define steps to be executed as part of the job.
    steps:
      # Upgrade the Ubuntu image (optional).
      - name: Upgrade Ubuntu Image
        run: sudo apt update && sudo apt upgrade -y
          
      # Checkout the code from the GitHub repository.
      - name: Checkout Code
        uses: actions/checkout@v2
      
      # Build Client Docker Image
      - name: Build Client Docker Image
        working-directory: ./client
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-application:client-${{ github.run_number }} .
      
      # Build Server Docker Image
      - name: Build Server Docker Image
        working-directory: ./api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-application:api-${{ github.run_number }} . 
      
      # Docker Hub Login
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Provide Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Provide Docker Hub password
          
      # Push Docker Images To Docker Hub
      - name: Push Docker Images To Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/blog-application:client-${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/blog-application:api-${{ github.run_number }}

name: AWS Configure

on:
  push:
    branches:
      - main

jobs:
    deploy:    
        # Set the operating system for the job.
        runs-on: ubuntu-latest
          
        # Define steps to be executed as part of the job.
        steps:
              
          # Checkout the code from the GitHub repository.
          - name: Checkout Code
            uses: actions/checkout@v2
          
          # Build Client Docker Image
          - name: Build Client Docker Image
            working-directory: ./client
            run: |
              docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-application:client .
          
          # Build Server Docker Image
          - name: Build Server Docker Image
            working-directory: ./api
            run: |
              docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-application:api . 
          
          # Docker Hub Login
          - name: Docker Hub Login
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}  # Provide Docker Hub username
              password: ${{ secrets.DOCKER_PASSWORD }}  # Provide Docker Hub password
              
          # Push Docker Images To Docker Hub
          - name: Push Docker Images To Docker Hub
            run: |
              docker push ${{ secrets.DOCKER_USERNAME }}/blog-application:client
              docker push ${{ secrets.DOCKER_USERNAME }}/blog-application:api  
    aws:
        needs: [deploy]
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: 'us-east-1'

            - name: SSH into EC2 Instance
              uses: easingthemes/ssh-deploy@main
              with:
                REMOTE_HOST: ${{secrets.AWS_EC2_HOST}}
                REMOTE_USER: ${{secrets.AWS_EC2_USERNAME}}
                SSH_PRIVATE_KEY:  ${{secrets.AWS_EC2_SSH_KEY}}
        
                script: |
                    sudo ls